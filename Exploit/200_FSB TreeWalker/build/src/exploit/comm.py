#!/usr/bin/env python
import telnetlib
from subprocess import Popen
from socket import socketpair, AF_INET, AF_UNIX, SOCK_STREAM
import sys

def recv_until(sock, eos):
    retval = ""
    while True:
        ch = sock.recv(1)
        if len(ch) == 1:
            retval += ch
        else:
            break
        if retval.endswith(eos):
            break
    return retval

def recv_lines(sock, num=0, prefix="[{num:>4}] "):
    cnt = 0
    retval = ""
    while num <= 0 or cnt < num:
        linebuf = recv_until(sock, "\n")
        if len(linebuf) > 0:
            retval += linebuf
            print prefix.format(num=cnt), linebuf,
        if linebuf.endswith("\n") == False:
            print
            break
        cnt += 1
    return retval

def interact(sock):
    t = telnetlib.Telnet()
    t.sock = sock
    t.interact()

def connect_to_subprocess(args):
    sp = socketpair(AF_UNIX, SOCK_STREAM)
    fd = sp[0].makefile("rw")
    Popen(args, stdin=fd, stdout=fd, stderr=fd, close_fds=True)
    return sp[1]

from socket import socket, AF_INET, SOCK_STREAM
import socket
def connect_to_tcpserver(addr):
    sock = socket.create_connection(addr)
    return sock

def test():
    sock = connect_to_subprocess(["/bin/ls", "-la"])
    recv_lines(sock)

if __name__ =="__main__":
    test()
